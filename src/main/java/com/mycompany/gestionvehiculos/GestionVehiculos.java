/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gestionvehiculos;

import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.stream.Collectors;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JTable;

/**
 *
 * @author Kevin Felix
 */
public class GestionVehiculos extends javax.swing.JFrame {
    /**
     * Creates new form GestionVehiculos
     */
    JTextField textCarga;
        private JComboBox listMotorAuto;
        private JComboBox listPuertas;
        private JComboBox listMotorMoto;
        private JComboBox listCC;
        private JComboBox listEjes;
        private ArrayList<Vehiculo> vehiculos;
        private File inventario;
    public GestionVehiculos() {
        inventario = new File("inventario.txt");
        if(!inventario.exists()){
            try{
                inventario.createNewFile();
            }
            catch(IOException e){
                e.printStackTrace();
            }
        }
        vehiculos = new ArrayList<Vehiculo>(); 
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        String[] tiposVehiculos = {"~","Auto", "Motocicleta", "Camion"};
        tipoLista = new javax.swing.JComboBox<>(tiposVehiculos);
        tipoLista.addActionListener(e -> actualizarAtributosEspecificos());
        jLabel3 = new javax.swing.JLabel();
        tipoLabel = new javax.swing.JLabel();
        labelMarca = new javax.swing.JLabel();
        textMarca = new javax.swing.JTextField();
        labelModelo = new javax.swing.JLabel();
        textModelo = new javax.swing.JTextField();
        textColor = new javax.swing.JTextField();
        labelYear = new javax.swing.JLabel();
        labelColor = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        labelPrecio = new javax.swing.JLabel();
        textPrecio = new javax.swing.JTextField();
        atributosEspecificosPanel1 = new javax.swing.JPanel();
        atributosEspecificosPanel2 = new javax.swing.JPanel();
        registrarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        camionTable = new JTable(new CamionTableModel(vehiculos.stream().filter(c -> c instanceof Camion).map(c -> (Camion) c).collect(Collectors.toList())));
        jScrollPane2 = new javax.swing.JScrollPane();
        autoTable = new JTable(new AutoTableModel(vehiculos.stream().filter(Auto.class::isInstance).map(Auto.class::cast).collect(Collectors.toList())));
        jScrollPane3 = new javax.swing.JScrollPane();
        motoTable = new JTable(new MotocicletaTableModel(vehiculos.stream().filter(m -> m instanceof Motocicleta).map(m -> (Motocicleta) m).collect(Collectors.toList())));
        labelCamion = new javax.swing.JLabel();
        labelAutos1 = new javax.swing.JLabel();
        labelMotos1 = new javax.swing.JLabel();
        autoBorrar = new javax.swing.JButton();
        motoBorrar = new javax.swing.JButton();
        camionBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Gestion de Vehiculos");
        setMaximumSize(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tipoLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoListaActionPerformed(evt);
            }
        });
        getContentPane().add(tipoLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Sistema de Gestion de Vehiculos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 0, 210, 30));

        tipoLabel.setText("Añadir a inventario");
        getContentPane().add(tipoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 20));

        labelMarca.setText("Marca");
        labelMarca.setToolTipText("");
        getContentPane().add(labelMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 40, 20));
        getContentPane().add(textMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 90, -1));

        labelModelo.setText("Modelo");
        getContentPane().add(labelModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 50, 20));

        textModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textModeloActionPerformed(evt);
            }
        });
        getContentPane().add(textModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 90, -1));

        textColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textColorActionPerformed(evt);
            }
        });
        getContentPane().add(textColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, 90, -1));

        labelYear.setText("Año");
        getContentPane().add(labelYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 40, 20));

        labelColor.setText("Color");
        getContentPane().add(labelColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 50, 20));
        getContentPane().add(textYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, 90, -1));

        labelPrecio.setText("Precio");
        getContentPane().add(labelPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 40, 20));
        getContentPane().add(textPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 60, 100, -1));
        getContentPane().add(atributosEspecificosPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 180, 30));
        getContentPane().add(atributosEspecificosPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 180, 30));

        registrarButton.setText("Registrar");
        registrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(registrarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, 140, -1));

        camionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Marca", "Modelo", "Año", "Color", "Ejes", "Carga Maxima (kg)", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        camionTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(camionTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 880, 110));

        autoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Marca", "Modelo", "Año", "Color", "Tipo de Motor", "Puertas", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        autoTable.setColumnSelectionAllowed(true);
        jScrollPane2.setViewportView(autoTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 880, 110));

        motoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Marca", "Modelo", "Año", "Color", "Tipo de Motor", "Cilindrada (cc)", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        motoTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(motoTable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 880, 110));

        labelCamion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCamion.setText("Camiones");
        getContentPane().add(labelCamion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        labelAutos1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelAutos1.setText("Autos");
        getContentPane().add(labelAutos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        labelMotos1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMotos1.setText("Motocicletas");
        getContentPane().add(labelMotos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        autoBorrar.setText("Borrar");
        autoBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(autoBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 270, -1, -1));

        motoBorrar.setText("Borrar");
        motoBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                motoBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(motoBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, -1, -1));

        camionBorrar.setText("Borrar");
        camionBorrar.setToolTipText("");
        camionBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camionBorrarActionPerformed(evt);
            }
        });
        getContentPane().add(camionBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 570, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textModeloActionPerformed

    private void textColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textColorActionPerformed

    private void tipoListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoListaActionPerformed
        
    }//GEN-LAST:event_tipoListaActionPerformed

    private void registrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarButtonActionPerformed
        String tipoSeleccionado = (String) tipoLista.getSelectedItem();
    if ("Auto".equals(tipoSeleccionado)) {
        Auto auto = new Auto(
            vehiculos.size() + 1,
            textMarca.getText(),
            textModelo.getText(),
            Integer.parseInt(textYear.getText()),
            textColor.getText(),
            (String) listMotorAuto.getSelectedItem(),
            (Integer) listPuertas.getSelectedItem(),
            Double.parseDouble(textPrecio.getText())
        );
        vehiculos.add(auto);
    }else if("Motocicleta".equals(tipoSeleccionado)){
        Motocicleta moto = new Motocicleta(
            vehiculos.size() + 1,
            textMarca.getText(),
            textModelo.getText(),
            Integer.parseInt(textYear.getText()),
            textColor.getText(),
            (String) listMotorMoto.getSelectedItem(),
            (Integer) listCC.getSelectedItem(),
            Double.parseDouble(textPrecio.getText())
        );
        vehiculos.add(moto);
    }else if("Camion".equals(tipoSeleccionado)){
        Camion camion = new Camion(
            vehiculos.size() + 1,
            textMarca.getText(),
            textModelo.getText(),
            Integer.parseInt(textYear.getText()),
            textColor.getText(),
            (Integer) listEjes.getSelectedItem(),
            Double.parseDouble(textCarga.getText()),
            Double.parseDouble(textPrecio.getText())
        );
        textCarga.setText("");
        vehiculos.add(camion);
    }
    textMarca.setText("");
    textModelo.setText("");
    textYear.setText("");
    textColor.setText("");
    textPrecio.setText("");
    actualizarTablas();
    }//GEN-LAST:event_registrarButtonActionPerformed

    private void autoBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoBorrarActionPerformed
        if(autoTable.getSelectedRow()>=0){
        int id=(int)autoTable.getModel().getValueAt(autoTable.getSelectedRow(),0);
         vehiculos.removeIf(v -> v.getId() == id);
        actualizarTablas();
        }
    }//GEN-LAST:event_autoBorrarActionPerformed

    private void motoBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_motoBorrarActionPerformed
        // TODO add your handling code here:
if(motoTable.getSelectedRow()>=0){
        int id=(int)motoTable.getModel().getValueAt(motoTable.getSelectedRow(),0);
         vehiculos.removeIf(v -> v.getId() == id);
        actualizarTablas();
}
    }//GEN-LAST:event_motoBorrarActionPerformed

    private void camionBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camionBorrarActionPerformed
        // TODO add your handling code here:
        if(camionTable.getSelectedRow()>=0){
         int id=(int)camionTable.getModel().getValueAt(camionTable.getSelectedRow(),0);
         vehiculos.removeIf(v -> v.getId() == id);
        actualizarTablas();   
        }
    }//GEN-LAST:event_camionBorrarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        guardarInventario();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened
    
    
    private void actualizarAtributosEspecificos() {
        // Limpiar el panel dinámico
        atributosEspecificosPanel1.removeAll();
        atributosEspecificosPanel2.removeAll();
        // Obtener la opción seleccionada
        String tipoSeleccionado = (String) tipoLista.getSelectedItem();

        // Agregar campos dependiendo del tipo seleccionado
        if ("Auto".equals(tipoSeleccionado)) {
            atributosEspecificosPanel1.add(new javax.swing.JLabel("Tipo de motor"));
            atributosEspecificosPanel1.add(listMotorAuto = new javax.swing.JComboBox<>());
            listMotorAuto.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "Gasolina", "Electrico", "Hibrido" }));
            atributosEspecificosPanel2.add(new javax.swing.JLabel("Puertas"));
            atributosEspecificosPanel2.add(listPuertas = new javax.swing.JComboBox<>());
            listPuertas.setModel(new javax.swing.DefaultComboBoxModel<Integer>(new Integer[]{2, 4}));
            listPuertas.setPreferredSize(new Dimension(64,26));
        } else if ("Motocicleta".equals(tipoSeleccionado)) {
            atributosEspecificosPanel1.add(new javax.swing.JLabel("Tipo de motor"));
            atributosEspecificosPanel1.add(listMotorMoto = new javax.swing.JComboBox<>());
            listMotorMoto.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "2 Tiempos", "4 Tiempos", "Electrica" }));
            atributosEspecificosPanel2.add(new javax.swing.JLabel("Cilindrada(cc)"));
            atributosEspecificosPanel2.add(listCC = new javax.swing.JComboBox<>());
            listCC.setModel(new javax.swing.DefaultComboBoxModel<Integer>(new Integer[]{50,125,250,300,500}));
            listCC.setPreferredSize(new Dimension(64,26));
        } else if ("Camion".equals(tipoSeleccionado)) {
            atributosEspecificosPanel1.add(new javax.swing.JLabel("Número de ejes"));
            atributosEspecificosPanel1.add(listEjes = new javax.swing.JComboBox<>());
            listEjes.setModel(new javax.swing.DefaultComboBoxModel<Integer>(new Integer[]{2,3,4,5}));
            listEjes.setPreferredSize(new Dimension(64,26));
            atributosEspecificosPanel2.add(new javax.swing.JLabel("Carga máxima(kg)"));
            atributosEspecificosPanel2.add(textCarga = new javax.swing.JTextField());
            textCarga.setPreferredSize(new Dimension(64,26));
        }

        // Refrescar el panel para mostrar los cambios
        atributosEspecificosPanel1.revalidate();
        atributosEspecificosPanel1.repaint();
        atributosEspecificosPanel2.revalidate();
        atributosEspecificosPanel2.repaint();
    }
    
    private void actualizarTablas() {
    autoTable.setModel(new AutoTableModel(
        vehiculos.stream()
                 .filter(Auto.class::isInstance)
                 .map(Auto.class::cast)
                 .collect(Collectors.toList())
    ));
    
    camionTable.setModel(new CamionTableModel(
        vehiculos.stream()
                 .filter(c -> c instanceof Camion)
                 .map(c -> (Camion) c)
                 .collect(Collectors.toList())
    ));

    motoTable.setModel(new MotocicletaTableModel(
        vehiculos.stream()
                 .filter(m -> m instanceof Motocicleta)
                 .map(m -> (Motocicleta) m)
                 .collect(Collectors.toList())
    ));
}
    private void guardarInventario(){
        try(FileWriter fw = new FileWriter("inventario.txt")){
            for(Vehiculo vehiculo:vehiculos){
                fw.write(vehiculo.toString()+"\n");
            }
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    
    private void cargarInventario(){
        vehiculos.clear();
        try(BufferedReader br = new BufferedReader(new FileReader("inventario.txt"))){
            String linea;
            while((linea=br.readLine()) != null){
                String[] campos = linea.split(",");
                String tipo = campos[0];
                switch(tipo){
                    case "Auto":
                        vehiculos.add(new Auto(Integer.parseInt(campos[1]),campos[2],campos[3],Integer.parseInt(campos[4]),campos[5],
                                campos[6],Integer.parseInt(campos[7]),Double.parseDouble(campos[8])));
                        break;
                    case "Motocicleta":
                        vehiculos.add(new Motocicleta(Integer.parseInt(campos[1]),campos[2],campos[3],Integer.parseInt(campos[4]),campos[5],
                                campos[6],Integer.parseInt(campos[7]),Double.parseDouble(campos[8])));
                        break;
                    case "Camion":
                        vehiculos.add(new Camion(Integer.parseInt(campos[1]),campos[2],campos[3],Integer.parseInt(campos[4]),campos[5],
                                Integer.parseInt(campos[6]),Double.parseDouble(campos[7]),Double.parseDouble(campos[8])));
                        break;
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        GestionVehiculos gv = new GestionVehiculos();
        gv.cargarInventario();
        gv.actualizarTablas();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                gv.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel atributosEspecificosPanel1;
    private javax.swing.JPanel atributosEspecificosPanel2;
    private javax.swing.JButton autoBorrar;
    private javax.swing.JTable autoTable;
    private javax.swing.JButton camionBorrar;
    private javax.swing.JTable camionTable;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAutos1;
    private javax.swing.JLabel labelCamion;
    private javax.swing.JLabel labelColor;
    private javax.swing.JLabel labelMarca;
    private javax.swing.JLabel labelModelo;
    private javax.swing.JLabel labelMotos1;
    private javax.swing.JLabel labelPrecio;
    private javax.swing.JLabel labelYear;
    private javax.swing.JButton motoBorrar;
    private javax.swing.JTable motoTable;
    private javax.swing.JButton registrarButton;
    private javax.swing.JTextField textColor;
    private javax.swing.JTextField textMarca;
    private javax.swing.JTextField textModelo;
    private javax.swing.JTextField textPrecio;
    private javax.swing.JTextField textYear;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.JComboBox<String> tipoLista;
    // End of variables declaration//GEN-END:variables
}
